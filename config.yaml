# Job specs define the configuration for Bacalhau jobs
jobs:
- id: metadata-job # This is the key used when looking for a job
  type: bacalhau # This job will run on the Bacalhau executor
  image: ghcr.io/bacalhau-project/amplify/tika:v0.0.0-3-gbdaf5ae
  entrypoint: ["extract-metadata", "/inputs", "/outputs"] # Container entrypoint
- id: merge-job
  image: ubuntu
  entrypoint:
  - bash
  - -c
  - >-
    if [ -d /inputs ] ; then cp -r /inputs/* /outputs ; else cp /inputs /outputs/blob ; fi &&
    find / -iwholename '/inputs*metadata.json' | while read line ; do
    result=$(
    echo $line |
    sed 's/\(.*\)outputs\//\1/g' |
    sed 's/\/inputs[0-9]*//g' |
    sed -r 's/(.+)\//\1./g'
    ) ;
    output=/outputs${result} ;
    mkdir -p $(dirname ${output}) ;
    echo "Copying $line to $output" ;
    cp $line $output
    ; done
- id: tree-job
  image: ubuntu
  entrypoint:
  - bash
  - -c
  - >-
    ls -R /inputs
# A job that accepts a root input and passes it to the output -- the root of all jobs
- id: root-job
  type: internal # This job will run on an internal executor. Internal job, doesn't leave Amplify.
  internal_job_id: root-job # Link to internal job ID, must exist in the codebase
- id: image-resize-job # This job resizes images recursively
  type: bacalhau
  image: dpokidov/imagemagick:7.1.0-47-ubuntu
  entrypoint:
  - bash
  - -c
  - >-
    magick mogrify -resize 100x100 -quality 100 -path /outputs $(find /inputs/images -type f | xargs)

# Amplify Work Graph specification
# Each item in the list is a node in the execution graph. A single request 
# (typically a single CID) runs this whole graph. 
graph:
- id: root-node # This is the root of the dag, where the request CID is placed
  job_id: root-job
  inputs:
  - root: true # Identifies that this is a root node
    path: /inputs # Path where inputs will be placed
  outputs:
  - id: default # Id of output
    path: /outputs # Path of output
- id: metadata-node # ID of the step
  job_id: metadata-job # ID of the job it runs
  inputs:
  - node_id: root-node
    output_id: default
    path: /inputs # Path where inputs will be placed
  outputs:
  - id: default # Id of output
    path: /outputs # Path of output
- id: merge-node
  job_id: merge-job
  inputs:
  - node_id: root-node
    output_id: default
    path: /inputs/root
  - node_id: metadata-node # ID of the step to get data from
    output_id: default # ID of the output to get data from
    path: /inputs/metadata
    predicate: '.*"Content-Type":"image\/jpeg".*' # A regex that must match the stdout of the node_id
  outputs:
  - id: default
    path: /outputs
- id: tree-node
  job_id: tree-job
  inputs:
  - node_id: metadata-node
    output_id: default
    path: /inputs/metadata
  - node_id: merge-node
    output_id: default
    path: /inputs/merge
  outputs:
  - id: default
    path: /outputs
- id: image-resize-node
  job_id: image-resize-job
  inputs:
  - node_id: metadata-node
    output_id: default
    path: /inputs/metadata
    predicate: '.*image\/.*' # A regex that must match the stdout of the previous node
  - node_id: root-node
    output_id: default
    path: /inputs/images/
  outputs:
  - id: default
    path: /outputs