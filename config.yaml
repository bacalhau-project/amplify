workflow:
  disable_derivative: false # Disable the running of one final job to produce a derivative
  derivative_job_name: tree
# Job specs define the configuration for Bacalhau jobs
jobs:
- id: metadata-job # This is the key used when looking for a job
  image: ghcr.io/bacalhau-project/amplify/tika:latest@sha256:266a93a391f139e6d23cff2cd9e4b555e49a58f001c20e9082a62a6859a02a50
  entrypoint: ["extract-metadata", "/inputs", "/outputs"] # Container entrypoint
- id: merge-job
  image: ubuntu
  entrypoint:
  - bash
  - -c
  - >-
    if [ -d /inputs ] ; then cp -r /inputs/* /outputs ; else cp /inputs /outputs/blob ; fi &&
    find / -iwholename '/inputs*metadata.json' | while read line ; do
    result=$(
    echo $line |
    sed 's/\(.*\)outputs\//\1/g' |
    sed 's/\/inputs[0-9]*//g' |
    sed -r 's/(.+)\//\1./g'
    ) ;
    output=/outputs${result} ;
    mkdir -p $(dirname ${output}) ;
    echo "Copying $line to $output" ;
    cp $line $output
    ; done
- id: tree-job
  image: ubuntu
  entrypoint:
  - bash
  - -c
  - >-
    ls -R /inputs
# Each element is a step in a workflow, combinations of the steps form a DAG.
# Note that there may be multiple root nodes in this graph that represent
# distinct workflows.
nodes:
- id: metadata-node # ID of the step
  job_id: metadata-job # ID of the job it runs
  inputs:
  - root: true # Identifies that this is a root node
    path: /inputs # Path where inputs will be placed
  outputs:
  - id: default # Id of output
    path: /outputs # Path of output
- id: merge-node
  job_id: merge-job
  inputs:
  - root: true
    path: /inputs/root
  - step_id: metadata-node # ID of the step to get data from
    output_id: default # ID of the output to get data from
    path: /inputs/metadata
  outputs:
  - id: default
    path: /outputs
- id: tree-node
  job_id: tree-job
  inputs:
  - step_id: metadata-node
    output_id: default
    path: /inputs/metadata
  - step_id: merge-node
    output_id: default
    path: /inputs/merge
  outputs:
  - id: default
    path: /outputs

# createSingleDerivative: true
# workflows:
# - name: parquet
#   jobs: # Defines order of jobs -- workflows run in order
#   - name: metadata # Must match the name of a job, is cached internally
#   - name: merge
#   - name: parquet
# - name: createACollage
#   jobs: 
#   - name: metadata 
#   - name: merge
#   - name: image-resize
#     runIfStdOutRegex: '"mime-type": "image/*"'
#   - name: collage
# - name: yolo
#   jobs: 
#   - name: metadata
#   - name: merge
#   - name: image-resize
#     runIfStdOutRegex: '"mime-type": "image/*"'
#   - name: yolo
